{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/nguye/Videos/frontend_newspapers-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./newspapers/newspapers.component\";\nexport class NewspapersService {\n  // id = 1;\n  constructor(newspapersComponent) {\n    this.newspapersComponent = newspapersComponent;\n    this.url = 'http://localhost:8888';\n    this.urlContent = 'http://localhost:8888';\n    this.urlBar = 'http://localhost:8888/get/menubar';\n    const id = 1;\n    const currentPage = 0;\n  }\n  getAllNewspapersLastest(id, currentPage) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let size = 10;\n      const total = yield fetch(`${_this.url}/?id=1&page=0&size=${size}`);\n      const reply = yield total.json();\n      console.log(reply.total - 1);\n      const limit = reply.total / size;\n      // if (currentPage > limit){\n      //     size = reply.total %size;\n      //     this.newspapersComponent.isScrollingActive = false;\n      // }\n      // const responseTemp = await temp.json();\n      // if (id == undefined) {id = 1};\n      const data = yield fetch(`${_this.url}/?id=${id}&page=${currentPage}&size=${size}`);\n      const response = yield data.json();\n      return response.newspapers ?? [];\n    })();\n  }\n  getContentNewspaper(code) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const data = yield fetch(`${_this2.urlContent}/newspaper/${code}`);\n      return (yield data.json()) ?? {};\n    })();\n  }\n  getCategoryNewspaper() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const data = yield fetch(`${_this3.urlBar}`);\n      const response = yield data.json();\n      console.log(response[0].category);\n      return response ?? [];\n    })();\n  }\n}\n_class = NewspapersService;\n_class.ɵfac = function NewspapersService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.NewspapersComponent));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["NewspapersService","constructor","newspapersComponent","url","urlContent","urlBar","id","currentPage","getAllNewspapersLastest","_this","_asyncToGenerator","size","total","fetch","reply","json","console","log","limit","data","response","newspapers","getContentNewspaper","code","_this2","getCategoryNewspaper","_this3","category","i0","ɵɵinject","i1","NewspapersComponent","factory","ɵfac","providedIn"],"sources":["C:\\Users\\nguye\\Videos\\frontend_newspapers-main\\src\\app\\newspapers.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Newspaperslastest } from './newspaperslastest';\nimport { NewspaperContent } from './newspaper-content';\nimport { Category } from './category';\nimport { NewspapersComponent } from './newspapers/newspapers.component';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewspapersService {\n  url = 'http://localhost:8888';\n  urlContent = 'http://localhost:8888';\n  urlBar = 'http://localhost:8888/get/menubar';\n  // id = 1;\n  constructor(private newspapersComponent: NewspapersComponent) {\n    const id = 1;\n    const currentPage: Number = 0;\n  }\n  async getAllNewspapersLastest(id: Number, currentPage: Number): Promise<Newspaperslastest[]> {\n    let size = 10;\n    const total = await fetch(`${this.url}/?id=1&page=0&size=${size}`);\n    const reply = await  total.json();\n    console.log(reply.total - 1 );\n    const limit = reply.total /size;\n    // if (currentPage > limit){\n    //     size = reply.total %size;\n    //     this.newspapersComponent.isScrollingActive = false;\n    // }\n    // const responseTemp = await temp.json();\n    // if (id == undefined) {id = 1};\n    const data = await fetch(`${this.url}/?id=${id}&page=${currentPage}&size=${size}`);\n    const response = await data.json();\n\n    return response.newspapers ?? [];\n  }\n\n  async getContentNewspaper(code: string): Promise<NewspaperContent | undefined> {\n    const data = await fetch(`${this.urlContent}/newspaper/${code}`);\n\n    return await data.json() ?? {};\n  }\n  async getCategoryNewspaper(): Promise<Category[] | undefined> {\n    const data = await fetch(`${this.urlBar}`);\n    const response =  await data.json();\n    console.log(response[0].category);\n    return response ??[];\n  }\n\n}\n"],"mappings":";;;;AAQA,OAAM,MAAOA,iBAAiB;EAI5B;EACAC,YAAoBC,mBAAwC;IAAxC,KAAAA,mBAAmB,GAAnBA,mBAAmB;IAJvC,KAAAC,GAAG,GAAG,uBAAuB;IAC7B,KAAAC,UAAU,GAAG,uBAAuB;IACpC,KAAAC,MAAM,GAAG,mCAAmC;IAG1C,MAAMC,EAAE,GAAG,CAAC;IACZ,MAAMC,WAAW,GAAW,CAAC;EAC/B;EACMC,uBAAuBA,CAACF,EAAU,EAAEC,WAAmB;IAAA,IAAAE,KAAA;IAAA,OAAAC,iBAAA;MAC3D,IAAIC,IAAI,GAAG,EAAE;MACb,MAAMC,KAAK,SAASC,KAAK,CAAC,GAAGJ,KAAI,CAACN,GAAG,sBAAsBQ,IAAI,EAAE,CAAC;MAClE,MAAMG,KAAK,SAAUF,KAAK,CAACG,IAAI,EAAE;MACjCC,OAAO,CAACC,GAAG,CAACH,KAAK,CAACF,KAAK,GAAG,CAAC,CAAE;MAC7B,MAAMM,KAAK,GAAGJ,KAAK,CAACF,KAAK,GAAED,IAAI;MAC/B;MACA;MACA;MACA;MACA;MACA;MACA,MAAMQ,IAAI,SAASN,KAAK,CAAC,GAAGJ,KAAI,CAACN,GAAG,QAAQG,EAAE,SAASC,WAAW,SAASI,IAAI,EAAE,CAAC;MAClF,MAAMS,QAAQ,SAASD,IAAI,CAACJ,IAAI,EAAE;MAElC,OAAOK,QAAQ,CAACC,UAAU,IAAI,EAAE;IAAC;EACnC;EAEMC,mBAAmBA,CAACC,IAAY;IAAA,IAAAC,MAAA;IAAA,OAAAd,iBAAA;MACpC,MAAMS,IAAI,SAASN,KAAK,CAAC,GAAGW,MAAI,CAACpB,UAAU,cAAcmB,IAAI,EAAE,CAAC;MAEhE,OAAO,OAAMJ,IAAI,CAACJ,IAAI,EAAE,KAAI,EAAE;IAAC;EACjC;EACMU,oBAAoBA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAhB,iBAAA;MACxB,MAAMS,IAAI,SAASN,KAAK,CAAC,GAAGa,MAAI,CAACrB,MAAM,EAAE,CAAC;MAC1C,MAAMe,QAAQ,SAAUD,IAAI,CAACJ,IAAI,EAAE;MACnCC,OAAO,CAACC,GAAG,CAACG,QAAQ,CAAC,CAAC,CAAC,CAACO,QAAQ,CAAC;MACjC,OAAOP,QAAQ,IAAG,EAAE;IAAC;EACvB;;SArCWpB,iBAAiB;;mBAAjBA,MAAiB,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,mBAAA;AAAA;;SAAjB/B,MAAiB;EAAAgC,OAAA,EAAjBhC,MAAiB,CAAAiC,IAAA;EAAAC,UAAA,EAFhB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}